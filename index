<!DOCTYPE html>
<html lang="ru" class="scroll-smooth">    
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Путь Мастера Звука: Интерактивная Платформа — Киберпанк</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;700&family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <style>
        /* Palette: soft cyberpunk blues */
        :root{
            --bg-1: #071226; /* deep navy */
            --bg-2: #07183a; /* slightly lighter */
            --accent: #60a5fa; /* light blue */
            --accent-2: #34d399; /* teal */
            --neon: #7dd3fc; /* cyan */
            --glass: rgba(18,24,44,0.55);
            --muted: #9aa7c6;
        }
        html,body{height:100%;}
        body {
            font-family: 'Roboto', sans-serif;
            margin:0;
            background: linear-gradient(180deg,var(--bg-1),var(--bg-2));
            color: #e6eef8;
            overflow-x:hidden;
        }
        h1,h2,h3{font-family:'Orbitron',sans-serif}
        /* Dynamic background canvas */
        #bgCanvas{
            position:fixed;
            inset:0;
            z-index:-2;
            width:100%;
            height:100%;
            pointer-events:none;
            mix-blend-mode:screen;
        }
        /* Subtle noise overlay */
        .noise{
            position:fixed;inset:0;z-index:-1;opacity:0.08;background-image:radial-gradient(rgba(255,255,255,0.02) 1px, transparent 1px);background-size:3px 3px;pointer-events:none;
        }
        header{backdrop-filter: blur(8px); background: linear-gradient(180deg, rgba(6,10,20,0.55), rgba(6,10,20,0.35)); border-bottom:1px solid rgba(96,165,250,0.06)}
        .nav-link{transition:all .25s ease; color:var(--muted); padding:.25rem .5rem; border-radius:.35rem}
        .nav-link.active{color:var(--accent-2); box-shadow:0 6px 20px rgba(52,211,153,0.06); transform:translateY(-2px)}
        .section{min-height:100vh;padding:8rem 1.25rem 4rem;display:flex;flex-direction:column;justify-content:center;align-items:center;position:relative}
        .section::before{content:'';position:absolute;inset:0;background:linear-gradient(180deg, rgba(20,30,50,0.12), rgba(5,8,15,0.35));z-index:0;pointer-events:none}
        .section-content{z-index:10;width:100%}
        .glass-card{background:var(--glass);backdrop-filter:blur(10px);border:1px solid rgba(96,165,250,0.09);border-radius:1.25rem;padding:1.5rem;transition:transform .45s cubic-bezier(.2,.9,.2,1), box-shadow .45s;box-shadow:0 8px 30px rgba(2,6,23,0.6)}
        .glass-card:hover{transform:translateY(-10px) scale(1.01);box-shadow:0 30px 80px rgba(96,165,250,0.08)}
        .glass-card .mini-legend{font-size:.8rem;color:var(--muted);margin-top:.5rem}
        .chart-container{position:relative;width:100%;max-width:920px;margin:0 auto;height:320px}
        .control-slider{accent-color:var(--accent-2)}
        /* Accent animated border */
        .glow-border{position:relative}
        .glow-border::after{content:'';position:absolute;inset:-2px;border-radius:1.25rem;background:linear-gradient(90deg, rgba(125,211,252,0.06), rgba(99,102,241,0.06));filter:blur(12px);opacity:.85;pointer-events:none}
        /* Wave overlay inside sections for depth */
        .wave-visual{position:absolute;left:0;right:0;bottom:0;height:40%;pointer-events:none;opacity:.08}
        /* Animated icons */
        .neon-dot{width:10px;height:10px;border-radius:50%;background:var(--neon);box-shadow:0 0 18px var(--neon);opacity:.95}
        /* Accordion tweaks */
        .accordion-button{width:100%;padding:0;background:transparent;border:none;display:flex;justify-content:space-between;align-items:center}
        .accordion-content{max-height:0;overflow:hidden;transition:max-height .55s cubic-bezier(.22,.9,.2,1)}
        /* Responsive tweaks */
        @media(min-width:768px){
            .section{padding:8rem 4rem 5rem}
            .chart-container{height:420px}
        }
        /* subtle floating animation for decorative elements */
        @keyframes floaty{0%{transform:translateY(0)}50%{transform:translateY(-8px)}100%{transform:translateY(0)}}
        .floaty{animation:floaty 6s ease-in-out infinite}
    </style>
</head>
<body class="overflow-x-hidden">

    <!-- Background canvas for animated particles & layered waves -->
    <canvas id="bgCanvas"></canvas>
    <div class="noise"></div>

    <header class="fixed top-0 left-0 w-full z-50">
        <nav class="container mx-auto px-6 py-4">
            <ul class="flex justify-center space-x-4 md:space-x-8 text-sm md:text-base font-medium text-gray-400">
                <li><a href="#stage1" class="nav-link">1. Природа</a></li>
                <li><a href="#stage2" class="nav-link">2. Распространение</a></li>
                <li><a href="#stage3" class="nav-link">3. Акустика</a></li>
                <li><a href="#stage4" class="nav-link">4. Психоакустика</a></li>
                <li><a href="#stage5" class="nav-link">5. Запись</a></li>
                <li><a href="#stage6" class="nav-link">6. Режиссура</a></li>
                <li><a href="#stage7" class="nav-link">7. Сторителлинг</a></li>
            </ul>
        </nav>
    </header>

    <main>
        <!-- Sections: content preserved verbatim; visual layers added but text untouched -->
        <section id="stage1" class="section">
            <div class="section-content text-center mb-12">
                <h2 class="text-4xl md:text-6xl font-bold text-accent text-green-400 mb-4" style="color:var(--accent-2)">Этап 1: Природа Звука</h2>
                <p class="max-w-3xl mx-auto text-lg" style="color:var(--muted)">Изучите фундаментальные основы. Управляйте параметрами звуковой волны в реальном времени, чтобы наглядно понять ее характеристики и поведение в различных средах.</p>
            </div>
            <div class="section-content w-full max-w-5xl glass-card glow-border">
                <div class="grid md:grid-cols-3 gap-8 items-center">
                    <div class="md:col-span-2">
                        <canvas id="soundWaveCanvas" class="w-full h-64 bg-transparent rounded-xl shadow-inner"></canvas>
                        <!-- small visual hint -->
                        <div class="flex items-center justify-between mt-3">
                            <div class="flex items-center gap-2"><span class="neon-dot floaty"></span><span class="mini-legend" style="color:var(--muted)">Интерактивный визуализатор волны</span></div>
                            <div class="mini-legend" style="color:var(--muted)">Задавайте частоту и амплитуду</div>
                        </div>
                    </div>
                    <div class="space-y-6">
                        <div>
                            <label for="frequency" class="block mb-2 font-medium" style="color:var(--accent-2)">Частота: <span id="frequencyValue">1</span> Hz</label>
                            <input id="frequency" type="range" min="1" max="10" value="2" step="0.1" class="w-full h-2 rounded-lg control-slider">
                        </div>
                        <div>
                            <label for="amplitude" class="block mb-2 font-medium" style="color:var(--accent-2)">Амплитуда: <span id="amplitudeValue">50</span></label>
                            <input id="amplitude" type="range" min="5" max="100" value="50" class="w-full h-2 rounded-lg control-slider">
                        </div>
                         <div class="text-center p-4 rounded-xl border" style="border-color:rgba(96,165,250,0.08)">
                            <p class="text-sm" style="color:var(--muted)">Скорость звука</p>
                            <p id="speedOfSound" class="text-2xl font-bold" style="color:var(--accent)">343 м/с (в воздухе)</p>
                        </div>
                    </div>
                </div>
            </div>
            <!-- decorative wave layer -->
            <svg class="wave-visual" viewBox="0 0 1440 320" preserveAspectRatio="none" xmlns="http://www.w3.org/2000/svg"><path fill="url(#g1)" d="M0,64L48,90.7C96,117,192,171,288,197.3C384,224,480,224,576,197.3C672,171,768,117,864,85.3C960,53,1056,43,1152,48C1248,53,1344,75,1392,85.3L1440,96L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z" opacity="0.18"></path><defs><linearGradient id="g1" x1="0" x2="1"><stop offset="0" stop-color="#0ea5e9" stop-opacity="0.18"></stop><stop offset="1" stop-color="#7dd3fc" stop-opacity="0.08"></stop></linearGradient></defs></svg>
        </section>

        <section id="stage2" class="section">
            <div class="section-content text-center mb-12">
                <h2 class="text-4xl md:text-6xl font-bold mb-4" style="color:var(--accent-2)">Этап 2: Распространение Звука</h2>
                <p class="max-w-3xl mx-auto text-lg" style="color:var(--muted)">Звук в пространстве подчиняется сложным законам. Изучите ключевые явления, которые определяют, как мы слышим звук в реальном мире.</p>
            </div>
            <div class="section-content w-full max-w-6xl grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                <div class="glass-card">
                    <h3 class="text-2xl font-bold mb-2" style="color:var(--accent)">Отражение (Рефлексия)</h3>
                    <p style="color:var(--muted)">Звуковая волна отскакивает от поверхности, подобно свету от зеркала. Угол падения равен углу отражения. Это явление создает эхо и реверберацию.</p>
                </div>
                <div class="glass-card">
                    <h3 class="text-2xl font-bold mb-2" style="color:var(--accent)">Преломление (Рефракция)</h3>
                    <p style="color:var(--muted)">Волна изменяет направление при переходе из одной среды в другую (например, из воздуха в воду) или при изменении свойств среды (температуры).</p>
                </div>
                <div class="glass-card">
                    <h3 class="text-2xl font-bold mb-2" style="color:var(--accent)">Дифракция</h3>
                    <p style="color:var(--muted)">Способность звуковых волн огибать препятствия. Благодаря дифракции мы можем слышать звук из-за угла, даже не видя его источника.</p>
                </div>
                <div class="glass-card">
                    <h3 class="text-2xl font-bold mb-2" style="color:var(--accent)">Интерференция</h3>
                    <p style="color:var(--muted)">Сложение двух или более волн. Если фазы совпадают (конструктивная), амплитуда увеличивается. Если фазы в противофазе (деструктивная), они гасят друг друга.</p>
                </div>
                <div class="glass-card">
                    <h3 class="text-2xl font-bold mb-2" style="color:var(--accent)">Рассеивание</h3>
                    <p style="color:var(--muted)">Отражение звука от неровной поверхности во многих направлениях. Диффузоры в студиях используют этот принцип для создания более равномерного звукового поля.</p>
                </div>
                <div class="glass-card">
                    <h3 class="text-2xl font-bold mb-2" style="color:var(--accent)">Поглощение</h3>
                    <p style="color:var(--muted)">Преобразование звуковой энергии в тепловую при прохождении через материал. Мягкие и пористые материалы хорошо поглощают звук.</p>
                </div>
            </div>
        </section>

        <section id="stage3" class="section">
             <div class="section-content text-center mb-12">
                <h2 class="text-4xl md:text-6xl font-bold mb-4" style="color:var(--accent-2)">Этап 3: Акустика Помещений</h2>
                <p class="max-w-3xl mx-auto text-lg" style="color:var(--muted)">Каждое пространство звучит по-своему. Поймите, как геометрия и материалы формируют акустическую среду и влияют на наше восприятие звука.</p>
            </div>
            <div class="section-content w-full max-w-5xl space-y-6">
                <div class="glass-card">
                    <h3 class="text-2xl font-bold mb-2" style="color:var(--accent)">Реверберация</h3>
                    <p style="color:var(--muted)">Это процесс затухания звука в помещении после выключения источника. Он состоит из множества отражений, приходящих к слушателю с разных сторон. Время реверберации (RT60) — ключевой параметр акустики помещения.</p>
                </div>
                 <div class="glass-card">
                    <h3 class="text-2xl font-bold mb-2" style="color:var(--accent)">Акустическая Изоляция</h3>
                    <p style="color:var(--muted)">Меры, направленные на снижение проникновения звука из одного помещения в другое. Включает в себя использование массивных материалов, многослойных конструкций и виброразвязки.</p>
                </div>
                <div class="glass-card">
                    <h3 class="text-2xl font-bold mb-2" style="color:var(--accent)">Цифровое Моделирование</h3>
                    <p style="color:var(--muted)">Современное программное обеспечение позволяет создавать точные 3D-модели помещений и симулировать распространение звука в них, предсказывая акустические параметры еще на этапе проектирования.</p>
                </div>
            </div>
        </section>
        
        <section id="stage4" class="section">
            <div class="section-content text-center mb-12">
                <h2 class="text-4xl md:text-6xl font-bold mb-4" style="color:var(--accent-2)">Этап 4: Психоакустика</h2>
                <p class="max-w-3xl mx-auto text-lg" style="color:var(--muted)">Узнайте, как наш мозг интерпретирует звуковые волны. Этот график показывает кривые равной громкости: звуки разных частот должны иметь разную физическую интенсивность, чтобы восприниматься нами как одинаково громкие.</p>
            </div>
            <div class="section-content w-full max-w-5xl glass-card glow-border">
                <div class="chart-container">
                    <canvas id="psychoacousticsChart"></canvas>
                </div>
            </div>
        </section>

        <section id="stage5" class="section">
            <div class="section-content text-center mb-12">
                <h2 class="text-4xl md:text-6xl font-bold mb-4" style="color:var(--accent-2)">Этап 5: Звукозапись и Обработка</h2>
                <p class="max-w-3xl mx-auto text-lg" style="color:var(--muted)">От микрофона до цифровой станции — освойте инструменты и техники, которые лежат в основе создания любого современного аудиоконтента.</p>
            </div>
            <div id="accordion-container-5" class="section-content w-full max-w-5xl space-y-4">
            </div>
        </section>
        
        <section id="stage6" class="section">
            <div class="section-content text-center mb-12">
                <h2 class="text-4xl md:text-6xl font-bold mb-4" style="color:var(--accent-2)">Этап 6: Звукорежиссура в Медиа</h2>
                <p class="max-w-3xl mx-auto text-lg" style="color:var(--muted)">Звук играет ключевую роль в кино, играх и VR. Изучите специфику создания звуковых миров для разных платформ.</p>
            </div>
            <div id="accordion-container-6" class="section-content w-full max-w-5xl space-y-4">
            </div>
        </section>
        
        <section id="stage7" class="section">
             <div class="section-content text-center mb-12">
                <h2 class="text-4xl md:text-6xl font-bold mb-4" style="color:var(--accent-2)">Этап 7: Сторителлинг через Звук</h2>
                <p class="max-w-3xl mx-auto text-lg" style="color:var(--muted)">Звук — это мощный инструмент повествования. Научитесь использовать его для вызова эмоций, создания атмосферы и ведения сюжета.</p>
            </div>
            <div id="accordion-container-7" class="section-content w-full max-w-5xl space-y-4">
            </div>
        </section>
    </main>

    <script>
        /* ------------------ Background animation (particles + layered waves) ------------------ */
        (function(){
            const c = document.getElementById('bgCanvas');
            const ctx = c.getContext('2d');
            let w = 0, h = 0, dpr = window.devicePixelRatio || 1;
            let particles = [];
            const PARTICLE_COUNT = 55;

            function resize(){
                dpr = window.devicePixelRatio || 1;
                w = innerWidth; h = innerHeight; c.width = w * dpr; c.height = h * dpr; c.style.width = w+'px'; c.style.height = h+'px'; ctx.setTransform(dpr,0,0,dpr,0,0);
            }

            function rand(min,max){return Math.random()*(max-min)+min}

            function initParticles(){
                particles = [];
                for(let i=0;i<PARTICLE_COUNT;i++){
                    particles.push({x:rand(0,w), y:rand(0,h), r:rand(0.8,3.6), vx:rand(-0.12,0.12), vy:rand(-0.06,0.06), alpha:rand(0.06,0.3), hue:rand(190,220)})
                }
            }

            function drawParticles(){
                particles.forEach(p=>{
                    p.x += p.vx; p.y += p.vy;
                    if(p.x< -20) p.x = w+20; if(p.x> w+20) p.x=-20;
                    if(p.y< -20) p.y = h+20; if(p.y> h+20) p.y=-20;
                    const g = ctx.createRadialGradient(p.x,p.y,0,p.x,p.y,p.r*10);
                    g.addColorStop(0,'hsla('+p.hue+',85%,65%,'+ (p.alpha*0.9) +')');
                    g.addColorStop(1,'hsla('+p.hue+',85%,60%,0)');
                    ctx.beginPath(); ctx.fillStyle = g; ctx.arc(p.x,p.y,p.r*6,0,Math.PI*2); ctx.fill();
                })
            }

            // layered sine waves for depth
            function drawWaves(t){
                const layers = [ {amp:60, speed:0.0009, hue:200, alpha:0.06, freq:0.0009}, {amp:28, speed:0.0016, hue:210, alpha:0.08, freq:0.0016}, {amp:14, speed:0.0026, hue:225, alpha:0.12, freq:0.0028} ];
                layers.forEach((L,i)=>{
                    ctx.beginPath();
                    ctx.moveTo(0, h*0.7);
                    const A = L.amp; const freq = 0.0025 + i*0.0008;
                    for(let x=0;x<w;x+=8){
                        const y = h*0.7 + Math.sin((x * freq) + t*L.speed) * (A * (1 + Math.sin(t*0.0008+i)));
                        ctx.lineTo(x,y);
                    }
                    ctx.lineTo(w,h); ctx.lineTo(0,h); ctx.closePath();
                    ctx.fillStyle = 'hsla('+L.hue+',80%,60%,'+L.alpha+')'; ctx.fill();
                })
            }

            let last = performance.now();
            function loop(now){
                const dt = now-last; last=now;
                ctx.clearRect(0,0,w,h);
                drawParticles();
                drawWaves(now);
                requestAnimationFrame(loop);
            }

            window.addEventListener('resize', ()=>{resize(); initParticles();});
            resize(); initParticles(); requestAnimationFrame(loop);
        })();

        /* ------------------ Main interaction (original) ------------------ */
        document.addEventListener('DOMContentLoaded', () => {

            const canvas = document.getElementById('soundWaveCanvas');
            const ctx = canvas.getContext('2d');
            const frequencySlider = document.getElementById('frequency');
            const amplitudeSlider = document.getElementById('amplitude');
            const frequencyValue = document.getElementById('frequencyValue');
            const amplitudeValue = document.getElementById('amplitudeValue');

            let width, height;

            function resizeCanvas() {
                const dpr = window.devicePixelRatio || 1;
                const rect = canvas.getBoundingClientRect();
                canvas.width = rect.width * dpr;
                canvas.height = rect.height * dpr;
                ctx.setTransform(dpr,0,0,dpr,0,0);
                width = canvas.width / dpr;
                height = canvas.height / dpr;
                draw();
            }

            function draw() {
                if (!ctx) return;
                const frequency = parseFloat(frequencySlider.value);
                const amplitude = parseFloat(amplitudeSlider.value);
                frequencyValue.textContent = `${frequency.toFixed(1)} Hz`;
                amplitudeValue.textContent = `${amplitude.toFixed(0)}`;

                ctx.clearRect(0, 0, width, height);
                // multi-layer glow lines for richer visual
                const lines = [ {w:10, a:0.12, col:'rgba(125,211,252,0.14)'}, {w:4, a:0.9, col:'rgba(52,211,153,0.95)'} ];
                lines.forEach((L, idx)=>{
                    ctx.beginPath();
                    ctx.moveTo(0, height / 2);
                    ctx.lineWidth = L.w;
                    ctx.strokeStyle = L.col;
                    ctx.shadowBlur = idx===0?18:8;
                    ctx.shadowColor = idx===0?'#7dd3fc':'#34d399';
                    for (let x = 0; x < width; x++) {
                        const y = height / 2 + amplitude * Math.sin(x * frequency * Math.PI / 180 + (Date.now()%2000)/2000 * Math.PI * 2 * (1+idx*0.25));
                        ctx.lineTo(x, y);
                    }
                    ctx.stroke();
                    ctx.shadowBlur = 0;
                });
            }

            frequencySlider.addEventListener('input', draw);
            amplitudeSlider.addEventListener('input', draw);
            window.addEventListener('resize', resizeCanvas);
            resizeCanvas();

            /* Chart: psychoacoustics */
            const chartCtx = document.getElementById('psychoacousticsChart').getContext('2d');
            const psychoacousticsChart = new Chart(chartCtx, {
                type: 'line',
                data: {
                    labels: ['20', '50', '100', '200', '500', '1k', '2k', '4k', '8k', '16k'],
                    datasets: [{
                        label: '40 Phon (тихо)',
                        data: [90, 62, 49, 38, 32, 40, 35, 22, 30, 50],
                        borderColor: '#60a5fa',
                        backgroundColor: '#60a5fa20',
                        tension: 0.4,
                        borderWidth: 3,
                    }, {
                        label: '70 Phon (нормально)',
                        data: [105, 82, 74, 68, 65, 70, 68, 60, 64, 78],
                        borderColor: '#a855f7',
                        backgroundColor: '#a855f720',
                        tension: 0.4,
                        borderWidth: 3,
                    }, {
                        label: '100 Phon (громко)',
                        data: [120, 108, 103, 100, 98, 100, 100, 95, 100, 105],
                        borderColor: '#f472b6',
                        backgroundColor: '#f472b620',
                        tension: 0.4,
                        borderWidth: 3,
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Кривые равной громкости (ISO 226:2003)',
                            color: '#e2e8f0',
                            font: { size: 18, family: 'Orbitron' }
                        },
                        legend: {
                            labels: { color: '#e2e8f0', font: { size: 14 } }
                        },
                        tooltip: {
                            backgroundColor: 'rgba(6,10,20,0.9)',
                            titleColor: '#e2e8f0',
                            bodyColor: '#e2e8f0',
                            borderColor: 'rgba(125,211,252,0.25)',
                            borderWidth: 1
                        }
                    },
                    scales: {
                        x: {
                            title: { display: true, text: 'Частота (Hz)', color: '#9fb3d9' },
                            ticks: { color: '#9fb3d9' },
                            grid: { color: 'rgba(99,102,241,0.06)' }
                        },
                        y: {
                            title: { display: true, text: 'Уровень звукового давления (dB SPL)', color: '#9fb3d9' },
                            ticks: { color: '#9fb3d9' },
                            grid: { color: 'rgba(99,102,241,0.06)' }
                        }
                    }
                }
            });

            /* Accordions: original data preserved */
            const accordionData = {
                5: [
                    { title: "Оборудование для записи", content: "Знакомство с микрофонами, аудиоинтерфейсами, рекордерами." },
                    { title: "Техники записи", content: "Методы записи различных источников звука, включая вокал, инструменты, амбиентные звуки." },
                    { title: "Цифровая обработка звука", content: "Основы работы с DAW, редактирование, эквализация, компрессия." },
                    { title: "Синтез звука", content: "Изучение методов синтеза звука, включая субтрактивный, FM и гранулярный синтез." },
                    { title: "Микрофонные технологии", content: "Современные виды микрофонов и их особенности для различных типов записи." }
                ],
                6: [
                    { title: "Звук в кино", content: "Особенности создания звукового оформления для фильмов, включая диалоги, звуковые эффекты и музыку." },
                    { title: "Звук в играх", content: "Разработка звукового дизайна для видеоигр, включая динамическое аудио и интерактивные элементы." },
                    { title: "Звук в VR/AR", content: "Особенности создания звука для виртуальной и дополненной реальности, включая пространственное аудио." },
                    { title: "Бинауральный звук", content: "Изучение методов записи и воспроизведения бинаурального звука для создания эффекта присутствия." },
                    { title: "Технологии пространственного звука", content: "Разработка и использование технологий для создания трехмерного звука в играх, кино и VR." }
                ],
                7: [
                    { title: "Основы сторителлинга", content: "Изучение принципов построения повествования и его элементов." },
                    { title: "Звук и эмоции", content: "Понимание влияния звука на эмоциональное восприятие аудитории." },
                    { title: "Звуковая драматургия", content: "Разработка звуковых решений, поддерживающих сюжет и атмосферу." },
                    { title: "Интерактивный сторителлинг", content: "Создание интерактивных аудиоисторий с использованием современных технологий." },
                    { title: "Потенциал ИИ", content: "Применение ИИ в создании интерактивных звуковых решений для сторителлинга." }
                ]
            };
            
            function createAccordion(containerId, data) {
                const container = document.getElementById(containerId);
                if (!container) return;
                data.forEach((item, index) => {
                    const div = document.createElement('div');
                    div.className = 'glass-card overflow-hidden';
                    div.innerHTML = `
                        <button class="accordion-button p-4">
                            <h3 class="text-xl font-bold" style="color:var(--accent)">${item.title}</h3>
                            <span class="text-2xl" style="color:var(--accent)">+</span>
                        </button>
                        <div class="accordion-content p-4">
                            <p style="color:var(--muted)">${item.content}</p>
                        </div>
                    `;
                    container.appendChild(div);
                });
            }

            createAccordion('accordion-container-5', accordionData[5]);
            createAccordion('accordion-container-6', accordionData[6]);
            createAccordion('accordion-container-7', accordionData[7]);
            
            document.querySelectorAll('[id^="accordion-container-"]').forEach(container => {
                container.addEventListener('click', (e) => {
                    const button = e.target.closest('.accordion-button');
                    if (button) {
                        const content = button.nextElementSibling;
                        const icon = button.querySelector('span');
                        const isOpen = content.style.maxHeight && content.style.maxHeight !== '0px';

                        button.parentElement.parentElement.querySelectorAll('.accordion-content').forEach(el => {
                            if (el !== content) {
                                el.style.maxHeight = null;
                                el.previousElementSibling.querySelector('span').style.transform = 'rotate(0deg)';
                                el.previousElementSibling.querySelector('span').textContent = '+';
                            }
                        });
                        
                        if (isOpen){
                            content.style.maxHeight = null;
                            icon.style.transform = 'rotate(0deg)';
                            icon.textContent = '+';
                        } else {
                            content.style.maxHeight = content.scrollHeight + "px";
                            icon.style.transform = 'rotate(45deg)';
                            icon.textContent = '–';
                        }
                    }
                });
            });

            /* Intersection observer for nav active state */
            const navLinks = document.querySelectorAll('.nav-link');
            const sections = document.querySelectorAll('.section');

            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        navLinks.forEach(link => {
                            link.classList.remove('active');
                            if (link.getAttribute('href').substring(1) === entry.target.id) {
                                link.classList.add('active');
                            }
                        });
                    }
                });
            }, { threshold: 0.5 });

            sections.forEach(section => observer.observe(section));

            /* Smooth interactions: keyboard shortcuts to navigate sections (1..7) */
            window.addEventListener('keydown', (e)=>{
                if(e.key>='1' && e.key<='7'){
                    document.getElementById('stage'+e.key).scrollIntoView({behavior:'smooth'});
                }
            });
        });
    </script>

</body>
</html>
